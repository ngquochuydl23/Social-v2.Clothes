// <auto-generated />
using System;
using Clothes.Order.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Clothes.Order.Api.Migrations
{
    [DbContext(typeof(ClothesOrderContext))]
    [Migration("20240409055501_ShippingAddressVO")]
    partial class ShippingAddressVO
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Clothes.Order.Api.Infrastructure.Entities.OrderDetailEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("Clothes.Order.Api.Infrastructure.Entities.OrderEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Clothes.Order.Api.Infrastructure.Entities.OrderDetailEntity", b =>
                {
                    b.HasOne("Clothes.Order.Api.Infrastructure.Entities.OrderEntity", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Clothes.Order.Api.Infrastructure.Entities.ProductValueObject", "Product", b1 =>
                        {
                            b1.Property<long>("OrderDetailEntityId")
                                .HasColumnType("bigint");

                            b1.Property<string>("ProductSku")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Thumbnail")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OrderDetailEntityId");

                            b1.ToTable("OrderDetail");

                            b1.WithOwner()
                                .HasForeignKey("OrderDetailEntityId");
                        });

                    b.Navigation("Order");

                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("Clothes.Order.Api.Infrastructure.Entities.OrderEntity", b =>
                {
                    b.OwnsOne("Clothes.Order.Api.Infrastructure.Entities.CustomerValueObject", "Customer", b1 =>
                        {
                            b1.Property<string>("OrderEntityId")
                                .HasColumnType("text");

                            b1.Property<string>("CustomerName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");
                        });

                    b.OwnsOne("Clothes.Order.Api.Infrastructure.Entities.ShippingAddressValueObject", "ShippingAddress", b1 =>
                        {
                            b1.Property<string>("OrderEntityId")
                                .HasColumnType("text");

                            b1.Property<string>("DetailAddress")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("ProvinceOrCity")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("WardOrCommune")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OrderEntityId");

                            b1.ToTable("Order");

                            b1.WithOwner()
                                .HasForeignKey("OrderEntityId");
                        });

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("ShippingAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("Clothes.Order.Api.Infrastructure.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
